mainmodule strassen {
message ValueMsg;
	mainchare Main {  
	entry Main(CkArgMsg *m);
	entry [threaded] void run(int size_);
	};

	chare strassen {  
	entry strassen(CkFuture f,int** A,int** B,int size);
	entry [threaded] void run(CkFuture f,int** A,int** B,int size);
	};  

	chare strassenSub {  
	entry strassenSub(CkFuture f,int** A,
                 int** B, int** C, int** D,
                  int size, char partition);
	entry [threaded] void run(CkFuture f,int** A,
                 int** B, int** C, int** D,
                  int size, char partition);
    entry strassenSub(CkFuture f,int** A,
             int** B, int** C,
              int size, char partition);
	entry [threaded] void run(CkFuture f,int** A,
             int** B, int** C,
              int size, char partition);
	};  

	chare addition {  
	entry addition(CkFuture f,int** A, int** B, int size);
	entry [threaded] void run(CkFuture f,int** A, int** B, int size);
	};

	chare substraction {  
	entry substraction(CkFuture f,int** A, int** B, int size);
	entry [threaded] void run(CkFuture f,int** A, int** B, int size);
	};

 }